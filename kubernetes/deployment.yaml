apiVersion: apps/v1
kind: Deployment
metadata:
  name: error-management
  namespace: cursor-agent
  labels:
    app: error-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: error-management
  template:
    metadata:
      labels:
        app: error-management
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: error-management
        image: error-management-system:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 50051
          name: grpc
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: workspace
          mountPath: /workspace
          readOnly: true
        - name: certs
          mountPath: /app/certs
          readOnly: true
        env:
        - name: SECURE_MODE
          value: "1"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: agent-secrets
              key: anthropic-api-key
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: workspace
        hostPath:
          path: /path/to/project
          type: Directory
      - name: certs
        secret:
          secretName: agent-certs
---
apiVersion: v1
kind: Service
metadata:
  name: error-management
  namespace: cursor-agent
spec:
  selector:
    app: error-management
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
  - name: http
    port: 8080
    targetPort: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: error-management-network-policy
  namespace: cursor-agent
spec:
  podSelector:
    matchLabels:
      app: error-management
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: cursor-ide
    ports:
    - protocol: TCP
      port: 50051
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: cursor-ide
    ports:
    - protocol: TCP
      port: 50051
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: error-management-role
  namespace: cursor-agent
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: error-management-role-binding
  namespace: cursor-agent
subjects:
- kind: ServiceAccount
  name: error-management
  namespace: cursor-agent
roleRef:
  kind: Role
  name: error-management-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: error-management
  namespace: cursor-agent
